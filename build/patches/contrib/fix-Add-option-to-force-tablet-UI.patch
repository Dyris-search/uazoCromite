From: Your Name <you@example.com>
Date: Fri, 1 Apr 2022 09:27:00 +0000
Subject: (fix) Add option to force tablet UI

---
 .../ChromeAccessibilitySettingsDelegate.java  | 19 +++++++++++++++++++
 .../accessibility/AccessibilitySettings.java  | 11 ++++-------
 .../AccessibilitySettingsDelegate.java        |  2 ++
 3 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java b/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
--- a/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/accessibility/settings/ChromeAccessibilitySettingsDelegate.java
@@ -67,6 +67,25 @@ public class ChromeAccessibilitySettingsDelegate implements AccessibilitySetting
         return new ReaderForAccessibilityDelegate();
     }
 
+    private static class ForceTabletUIDelegate implements BooleanPreferenceDelegate {
+        @Override
+        public boolean isEnabled() {
+            return SharedPreferencesManager.getInstance().readBoolean(
+                      ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, false);
+        }
+
+        @Override
+        public void setEnabled(boolean value) {
+            SharedPreferencesManager.getInstance().writeBoolean(
+                      ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, value);
+        }
+    }
+
+    @Override
+    public BooleanPreferenceDelegate getForceTabletUIDelegate() {
+        return new ForceTabletUIDelegate();
+    }
+
     @Override
     public void addExtraPreferences(PreferenceFragmentCompat fragment) {
         if (ImageDescriptionsController.getInstance().shouldShowImageDescriptionsMenuItem()) {
diff --git a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
--- a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
+++ b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettings.java
@@ -17,9 +17,6 @@ import org.chromium.components.browser_ui.accessibility.FontSizePrefs.FontSizePr
 import org.chromium.components.browser_ui.settings.ChromeBaseCheckBoxPreference;
 import org.chromium.components.browser_ui.settings.SettingsUtils;
 
-import org.chromium.chrome.browser.preferences.ChromePreferenceKeys;
-import org.chromium.chrome.browser.preferences.SharedPreferencesManager;
-
 /**
  * Fragment to keep track of all the accessibility related preferences.
  */
@@ -35,6 +32,7 @@ public class AccessibilitySettings
     private ChromeBaseCheckBoxPreference mForceEnableZoomPref;
     private boolean mRecordFontSizeChangeOnStop;
     private AccessibilitySettingsDelegate mDelegate;
+    private BooleanPreferenceDelegate mForceTabletUIDelegate;
     private BooleanPreferenceDelegate mReaderForAccessibilityDelegate;
     private BooleanPreferenceDelegate mAccessibilityTabSwitcherDelegate;
 
@@ -91,8 +89,8 @@ public class AccessibilitySettings
 
         ChromeBaseCheckBoxPreference forceTabletUiPref =
                 (ChromeBaseCheckBoxPreference) findPreference(PREF_FORCE_TABLET_UI);
-        forceTabletUiPref.setChecked(SharedPreferencesManager.getInstance().readBoolean(
-                            ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, false));
+        mForceTabletUIDelegate = mDelegate.getForceTabletUIDelegate();
+        forceTabletUiPref.setChecked(mForceTabletUIDelegate.isEnabled());
         forceTabletUiPref.setOnPreferenceChangeListener(this);
 
         ChromeBaseCheckBoxPreference accessibilityTabSwitcherPref =
@@ -144,8 +142,7 @@ public class AccessibilitySettings
         } else if (PREF_FORCE_ENABLE_ZOOM.equals(preference.getKey())) {
             mFontSizePrefs.setForceEnableZoomFromUser((Boolean) newValue);
         } else if (PREF_FORCE_TABLET_UI.equals(preference.getKey())) {
-            SharedPreferencesManager.getInstance().writeBoolean(
-                ChromePreferenceKeys.FLAGS_FORCE_TABLET_UI_ENABLED, (Boolean) newValue);
+            mForceTabletUIDelegate.setEnabled((Boolean) newValue);
         } else if (PREF_READER_FOR_ACCESSIBILITY.equals(preference.getKey())) {
             if (mReaderForAccessibilityDelegate != null) {
                 mReaderForAccessibilityDelegate.setEnabled((Boolean) newValue);
diff --git a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
--- a/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
+++ b/components/browser_ui/accessibility/android/java/src/org/chromium/components/browser_ui/accessibility/AccessibilitySettingsDelegate.java
@@ -44,6 +44,8 @@ public interface AccessibilitySettingsDelegate {
      */
     BooleanPreferenceDelegate getReaderForAccessibilityDelegate();
 
+    BooleanPreferenceDelegate getForceTabletUIDelegate();
+
     /**
      * Allows the embedder to add more preferences to the preference screen.
      *
--
2.25.1
